#!/bin/bash
# | Responsible for verifying whether it is safe to install QuickDirs(default), and for uninstalling QuickDirs if asked to(clean). 
# | In hindsight this file should have been split into two files, "uninstall", and "verify". 

# | Some script-local variables.
exit_success=0
exit_unknown=1
exit_mkdir_root_fail=2
exit_copy_presets_fail=3
exit_clean_fail=4
exit_profile_dirty=5
me=`basename $0`
user=`id -u -n`
qdpath=$HOME/QuickDirs

function main()
{
    if [ $# -eq 0 ]; then
        # | No arguments: just do profiling.
        (profile && return $?)
    elif [ $# -eq 1 ] && [ $1 == "clean" ]; then
        (clean && return $?)
    else
        # | Called in an unexpected way.
        echo "Unknown calling convention."
        echo ""
        echo "calling info: "
        echo "    -argc => $#"
        echo "    -argv => $@"
        echo ""

        return $exit_unknown
    fi
}

function profile()
{
    if [ -d "/home/$user/QuickDirs/" ]; then
        echo "Please delete $qdpath."
        echo ""
        echo "This script will do it for you if you run it by: "
        echo "    ./$me clean"
        echo ""
        return $exit_profile_dirty
    else
        echo "Your filesystem has no conflicts with QuickDirectories."
        echo ""
        echo "it is now safe to run ./configure."
        echo ""
        return $exit_success
    fi
}

##
# Responsible for removing /home/$user/QuickDirs/
#     directory from the filesystem.
#
# on error,
##
function clean()
{
    if [ -d "$qdpath" ]; then
        rm -rf $qdpath
        err=$?

        if [ $? -ne 0 ]; then
            # | rm did not return 0, we failed to clean.
            echo "could not remove $qdpath from your filesystem."
            echo ""
            echo "rm returned with $err."
            echo ""
            return $exit_clean_fail
        fi
        echo "Successfully removed $qdpath from your filesystem."
        echo ""
        echo "It is now safe to run ./configure."
        echo ""
    else
        echo "The path \"$qdpath\" does not exist."
        echo ""
        echo "There is nothing to clean."
        echo ""

        # not actually success, but it is a "normal" usecase.
        return $exit_success
    fi
}

main $@
err=$?
echo "Script [profile] has completed with result code $err."
exit $err
