#!/bin/bash
# -
# checks if the path is safe for installation.
# -

# global data division begin.
    # exit code section begin.
        exit_success=0
        exit_unknown=1
        exit_mkdir_root_fail=2
        exit_copy_presets_fail=3
        exit_clean_fail=4
    # end section.

    # global value section begin.
        user=`id -u -n`
        qdpath=$HOME/QuickDirs
        pspath=../preset
    # end global value section.
 # end division.

function main()
{
    if [ $# -eq 0 ]; then
        # no arguments: just configure.
        (configure && return $?)
    else
        # called in an unexpected way.
        echo "Unknown calling convention."
        echo "calling info: "
        echo "    -argc => $#"
        echo "    -argv => $@"
        echo ""

        return $exit_unknown
    fi
}

# -
# create our directories and copy our files.
# -
function configure()
{
    mkdir $qdpath
    err=$?
    if [ $err -ne 0 ]; then
        # could not create root directory for the installation.
        echo "Cannot create root folder of QuickDirectories."
        echo "Please run the profiler."
        echo ""
        echo "mkdir failed with code $err."
        echo ""

        return $exit_mkdir_root_fail
    fi

    # copy our preset
    cp -r $pspath/* $qdpath
    err=$?
    if [ $err -ne 0 ]; then
        echo "Cannot move preset hierarchy to QD root folder."
        echo ""
        echo "cp failed with code $err."
        echo ""
        return $exit_copy_presets_fail
    fi

    mkdir $qdpath/my_archives
    mkdir $qdpath/my_tests
    mkdir $qdpath/my_tests/quick1
    mkdir $qdpath/my_tests/quick2
    mkdir $qdpath/my_tests/quick3
    mkdir $qdpath/my_tests/quick4
    mkdir $qdpath/my_tests/quick5
    mkdir $qdpath/my_tests/quick6
    mkdir $qdpath/my_tests/quick7
    mkdir $qdpath/my_tests/quick8

    echo "Configuration completed successfully!"
    echo ""
    echo "root directory preview($qdpath):"
    ls -l $qdpath
    echo ""
}

# procedure division.
    main $@
    err=$?
    echo "exitting with code $err."
    exit $err
# end
